<?xml version="1.0" encoding="UTF-8"?>

<rulestore type="mule4" >
	<ruleset category="application" pluginVersion="1.1">
		<rule id="1"
			name="Application should have used APIKit to auto-generate the implementation interface"
			description="Application should have used APIKit to auto-generate the implementation interface"
			severity="MAJOR" applies="application" type="code_smell">
			count(//mule:mule/apikit:config)>0
		</rule>
		<rule id="2"
			name="Application should have an APIKit Global exception strategy"
			description="Application should have an APIKit Global exception strategy"
			severity="MAJOR" applies="application" type="code_smell">
			starts-with(//mule:on-error-propagate/@type,'APIKIT')
		</rule>
	</ruleset>
	<ruleset category="flows" pluginVersion="1.1">
		<rule id="1"
			name="Configuration files should not have so many flows"
			description="Configuration files should not have so many flows"
			severity="MAJOR" applies="file" type="code_smell">
			not(count(//mule:mule/mule:flow)>=10)
		</rule>
		<rule id="2"
			name="Configuration files should not have so many subflows"
			description="Configuration files should not have so many subflows"
			severity="MAJOR" applies="file" type="code_smell">
			not(count(//mule:mule/mule:sub-flow)>=5)
		</rule>
		<rule id="3" name="Flow names should match a naming convention"
			description="Flow names should match a naming convention"
			severity="MINOR" type="code_smell">
			//mule:flow[not(f:matches(@name, '^[a-z:\\{}]+(-[a-z]+)*$'))]
		</rule>
		<rule id="4"
			name="Subflow names should match a naming convention"
			description="Subflow names should match a naming convention"
			severity="MINOR" type="code_smell">
			//mule:sub-flow[not(f:matches(@name, '^[a-z:\\{}]+(-[a-z]+)*$'))]
		</rule>
		<rule id="6" name="Encryption key should not be logged"
			description="Encryption key should not be logged" severity="MAJOR"
			type="vulnerability">
			//mule:logger[contains(@message,'${mule.key}')]
		</rule>
	</ruleset>
	<ruleset category="configuration" pluginVersion="1.1">
		<rule id="1"
			name="Credentials and resources should be managed with application properties"
			description="Credentials and resources should be managed with application properties"
			severity="MAJOR" applies="application" type="bug">
			count(//mule:mule/secure-properties:config)>=1 or
			count(//mule:mule/mule:configuration-properties)>=1
		</rule>
		<rule id="2"
			name="Mule Credentials Vault should not use a hardcoded encryption key"
			description="Mule Credentials Vault should not use a hardcoded encryption key"
			severity="MAJOR" type="bug">
			//mule:mule/secure-properties:config[f:isNotConfigurable(@key)]
		</rule>
		<rule id="3"
			name="AutoDiscovery should be used to register the app in API manager"
			description="AutoDiscovery should be used to register the app in API manager"
			severity="MAJOR" applies="application" type="vulnerability">
			count(//mule:mule/api-gateway:autodiscovery)=1
		</rule>
		<rule id="4"
			name="HTTP Status codes should have been properly set inside the exception handler"
			description="HTTP Status codes should have been properly set inside the exception handler"
			severity="MAJOR" applies="application" type="bug">
			count(//mule:on-error-propagate[@type='APIKIT:BAD_REQUEST'])>0
			and
			count(//mule:on-error-propagate[@type='APIKIT:METHOD_NOT_ALLOWED'])>0
			and
			count(//mule:on-error-propagate[@type='APIKIT:NOT_FOUND'])>0
		</rule>
		<rule id="5"
			name="Data Transformations should be stored in external DWL Files - Payload"
			description="Data Transformations should be stored in external DWL Files - Payload"
			severity="MINOR" type="code_smell">
			//ee:transform/ee:message/ee:set-payload[not(f:matches(@resource, '^.*dwl$'))]
		</rule>
		<rule id="6"
			name="Data Transformations should be stored in external DWL Files - Variable"
			description="Data Transformations should be stored in external DWL Files - Variable"
			severity="MINOR" type="code_smell">
			//ee:transform/ee:message/ee:set-variable[not(f:matches(@resource, '^.*dwl$'))]
		</rule>
		<rule id="7" name="HTTP Listener should use HTTPS protocol"
			description="HTTP Listener should use HTTPS protocol"
			severity="MAJOR" type="vulnerability"
			locationHint="//*[local-name()='listener-config']">
			//mule:mule/http:listener-config/http:listener-connection[not(@protocol = 'HTTPS')]
		</rule>
		<rule id="8"
			name="HTTP Listener should use a specific port property"
			description="HTTP Listener should use a specific port property"
			severity="MAJOR" type="code_smell">
			//mule:mule/http:listener-config/http:listener-connection[f:isNotConfigurable(@port)]
		</rule>
		<rule id="9"
			name="API ID in AutoDiscovery should not use a hardcoded value"
			description="API ID in AutoDiscovery should not use a hardcoded value"
			severity="MAJOR" type="code_smell">
			//mule:mule/api-gateway:autodiscovery[f:isNotConfigurable(@apiId)]
		</rule>
		<rule id="10"
			name="MSSQL - DB Host name should not use a hardcoded value"
			description="DB Host name should not use a 	&lt;b&gt;hardcoded value&lt;/b&gt;"
			severity="MAJOR" type="code_smell">
			//mule:mule/db:config/db:mssql-connection[f:isNotConfigurable(@host)]
		</rule>
		<rule id="11"
			name="Domain - HTTP Requestor reconnection strategy should use a configurable count value"
			description="&lt;b&gt;Domain&lt;/b&gt; - HTTP Requestor reconnection strategy should use a configurable count value"
			severity="MAJOR" type="bug">
			//domain:mule-domain/http:request-config/http:request-connection/mule:reconnection/mule:reconnect[f:isNotConfigurable(@count)]
		</rule>
		<rule id="12"
			name="Domain - HTTP Requestor reconnection strategy should use configurable frequency"
			description="&lt;b&gt;Domain&lt;/b&gt; - HTTP Requestor reconnection strategy should use configurable frequency"
			severity="MAJOR" type="bug">
			//domain:mule-domain/http:request-config/http:request-connection/mule:reconnection/mule:reconnect[f:isNotConfigurable(@frequency)]
		</rule>
		<rule id="13"
			name="Domain - Mule Secure Properties should use AES-CBC algorithm"
			description="&lt;b&gt;Domain&lt;/b&gt; - Mule Secure Properties should use AES-CBC algorithm"
			severity="MAJOR" type="vulnerability">
			//domain:mule-domain/secure-properties:config/secure-properties:encrypt[@algorithm != 'AES' or @mode != 'CBC']
		</rule>
		<rule id="14"
			name="Domain - HTTP Listener should not use a hardcoded port value"
			description="&lt;b&gt;Domain&lt;/b&gt; - HTTP Listener should not use a hardcoded port value"
			severity="MAJOR" type="code_smell">
			//domain:mule-domain/http:listener-config/http:listener-connection[f:isNotConfigurable(@port)]
		</rule>
		<rule id="15"
			name="Domain - HTTP Requestor Configuration should reference a TLS Configuration"
			description="&lt;b&gt;Domain&lt;/b&gt; - HTTP Requestor should reference a TLS Configuration"
			severity="MINOR" type="bug">
			//domain:mule-domain/http:request-config/http:request-connection[f:isNotConfigurable(@tlsContext)]
		</rule>
		<rule id="16"
			name="Domain - Trust Store Configuration should use a configurable path"
			description="&lt;b&gt;Domain&lt;/b&gt; - Trust Store Configuration should use a configurable path"
			severity="MINOR" type="vulnerability">
			//domain:mule-domain/tls:context/tls:trust-store[f:isNotConfigurable(@path)]
		</rule>
		<rule id="17"
			name="Domain - Key Store Configuration should use a configurable path"
			description="&lt;b&gt;Domain&lt;/b&gt; - Key Store Configuration should use a configurable path"
			severity="MINOR" type="vulnerability">
			//domain:mule-domain/tls:context/tls:key-store[f:isNotConfigurable(@path)]
		</rule>
		<rule id="18"
			name="Domain - Trust Store Configuration should not have the insecure attribute"
			description="&lt;b&gt;Domain&lt;/b&gt; - Trust Store Configuration should not have the insecure attribute"
			severity="CRITICAL" type="vulnerability">
			//domain:mule-domain/tls:context/tls:trust-store/@insecure
		</rule>
		<rule id="19"
			name="Domain - HTTPS Listener should have a TLS Configuration"
			description="&lt;b&gt;Domain&lt;/b&gt; - HTTPS Listener should have a TLS Configuration"
			severity="MAJOR" type="vulnerability">
			//domain:mule-domain/http:listener-config/http:listener-connection[@protocol = 'HTTPS' and not(@tlsContext)]
		</rule>
		<rule id="20"
			name="Domain - HTTP Requestor Configuration should not use dynamic default headers or query params"
			description="&lt;b&gt;Domain&lt;/b&gt; - HTTP Requestor Configuration should not use dynamic default headers or query params"
			severity="CRITICAL" type="code_smell">
			//domain:mule-domain/http:request-config/http:default-headers/http:default-header[f:matches(@value,'^#\[.*\]$')]
			|
			//domain:mule-domain/http:request-config/http:default-query-params/http:query-param[f:matches(@value,'^#\[.*\]$')]
		</rule>
		<rule id="21"
			name="Domain - HTTP Requestor Configuration should have a configurable Response Timeout"
			description="&lt;b&gt;Domain&lt;/b&gt; - HTTP Requestor Configuration should have a configurable Response Timeout"
			severity="CRITICAL" type="bug">
			//domain:mule-domain/http:request-config[f:isNotConfigurable(@responseTimeout)]
		</rule>
	</ruleset>
</rulestore>
